{"ast":null,"code":"var _jsxFileName = \"/Users/eddieandtheworld/Desktop/Desktop/playground-icloud.nosync/Memory-game/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { SingleCard } from \"./components/singleCard/SingleCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  src: \"/img/helmet-1.png\",\n  matched: false\n}, {\n  src: \"/img/potion-1.png\",\n  matched: false\n}, {\n  src: \"/img/ring-1.png\",\n  matched: false\n}, {\n  src: \"/img/scroll-1.png\",\n  matched: false\n}, {\n  src: \"/img/shield-1.png\",\n  matched: false\n}, {\n  src: \"/img/sword-1.png\",\n  matched: false\n}];\n\nfunction App() {\n  _s();\n\n  //shffle cards\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n\n  const handleChoice = card => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  const shffleCards = () => {\n    const shffledCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({ ...card,\n      id: Math.random()\n    }));\n    setCards(shffledCards);\n    setTurns(0);\n  }; // reset turns\n\n\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns => prevTurns + 1);\n  };\n\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return { ...card,\n                matched: true\n              };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurn();\n      } else {\n        resetTurn();\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n  console.log(cards);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Magic Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCard, {\n        card: card,\n        handleChoice: handleChoice\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/JnteANCPxCZNpFpO1ZAWIjzFcc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/eddieandtheworld/Desktop/Desktop/playground-icloud.nosync/Memory-game/src/App.js"],"names":["useState","useEffect","SingleCard","cardImages","src","matched","App","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","handleChoice","card","shffleCards","shffledCards","sort","Math","random","map","id","resetTurn","prevTurns","prevCards","console","log"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { SingleCard } from \"./components/singleCard/SingleCard\";\n\nconst cardImages = [\n  { src: \"/img/helmet-1.png\", matched: false },\n  { src: \"/img/potion-1.png\", matched: false },\n  { src: \"/img/ring-1.png\", matched: false },\n  { src: \"/img/scroll-1.png\", matched: false },\n  { src: \"/img/shield-1.png\", matched: false },\n  { src: \"/img/sword-1.png\", matched: false },\n];\n\nfunction App() {\n  //shffle cards\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  const shffleCards = () => {\n    const shffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({ ...card, id: Math.random() }));\n\n    setCards(shffledCards);\n    setTurns(0);\n  };\n\n  // reset turns\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns((prevTurns) => prevTurns + 1);\n  };\n\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      if (choiceOne.src === choiceTwo.src) {\n        setCards((prevCards) => {\n          return prevCards.map((card) => {\n            if (card.src === choiceOne.src) {\n              return { ...card, matched: true };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurn();\n      } else {\n        resetTurn();\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n\n  console.log(cards);\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shffleCards}>New Game</button>\n\n      <div className=\"card-grid\">\n        {cards.map((card) => (\n          <SingleCard key={card.id} card={card} handleChoice={handleChoice} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}